package org.kie.mojos;

import org.apache.maven.execution.MavenSession;
import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugins.annotations.Parameter;
import org.kie.model.ProjectDefinition;
import org.kie.model.ProjectStructure;

import java.io.File;
import java.nio.file.Path;
import java.util.List;

/**
 * Abstract Mojo defining common parameters shared across implementing Mojos.
 */
public abstract class AbstractMojoDefiningParameters extends AbstractMojo {

    @Parameter(defaultValue = "${session}", readonly = true)
    protected MavenSession mavenSession;

    /**
     * Defining properties for the project to be generated including resources to be copied into it.
     * <pre>
     *  &lt;project-definitions&gt;
     *    &lt;project-definition&gt;
     *      &lt;groupId&gt;&lt;/groupId&gt;
     *      &lt;artifactId&gt;&lt;/artifactId&gt;
     *      &lt;packageName&gt;&lt;/packageName&gt;
     *      &lt;copy-resources&gt;
     *        &lt;resource&gt;
     *          &lt;includes&gt;&lt;/includes&gt;
     *          &lt;excludes&gt;&lt;/excludes&gt;
     *        &lt;/resource&gt;
     *      &lt;/copy-resources&gt;
     *    &lt;/project-definition&gt;
     *    &lt;project-definition&gt;
     *             ...
     *    &lt;/project-definition&gt;
     *  &lt;/project-definitions&gt;
     * </pre>
     */
    @Parameter(readonly = true, alias = "project-definitions", required = true)
    protected List<ProjectDefinition> projectDefinitions;

    /**
     * Defining structure of the project to be generated by specifying archetype and possible cleanup of generated resources.
     * <pre>
     * &lt;project-structures&gt;
     *   &lt;project-structure&gt;
     * 	   &lt;id&gt;quarkus&lt;/id&gt;
     * 	   &lt;archetype&gt;
     * 	     &lt;groupId&gt;org.kie.kogito&lt;/groupId&gt;
     * 	     &lt;artifactId&gt;kogito-quarkus-archetype&lt;/artifactId&gt;
     * 	     &lt;version&gt;7.11.0.redhat-210224&lt;/version&gt;
     * 	   &lt;/archetype&gt;
     * 	   &lt;delete-resources&gt;
     * 	     &lt;resource&gt;
     * 	       &lt;directory&gt;src/main/resources&lt;/directory&gt;
     *         &lt;includes&gt;
     *           &lt;include&gt;*&lt;/include&gt;
     *           &lt;include&gt;**&#47;*&lt;/include&gt;
     *         &lt;/includes&gt;
     *         &lt;excludes&gt;
     *           &lt;exclude&gt;application.properties&lt;/exclude&gt;
     *         &lt;/excludes&gt;
     *       &lt;/resource&gt;
     *     &lt;/delete-resources&gt;
     * 	 &lt;/project-structure&gt;
     * &lt;/project-structures&gt;
     * </pre>
     */
    @Parameter(readonly = true, alias = "project-structures", required = true)
    protected List<ProjectStructure> projectStructures;

    /**
     * File denoting target directory for the generating project, not the generated one.<p/>
     * For getting generated project location use {@linkplain org.kie.GeneratedProjectUtils#getOutputDirectoryForArchetype(Path, ProjectDefinition, ProjectStructure)}
     */
    @Parameter(defaultValue = "${project.build.directory}", property = "outputDir", required = true)
    protected File outputDirectory;
}
